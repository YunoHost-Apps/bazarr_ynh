#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression "Loading installation settings..."

detect_and_read_radarr_and_sonarr_settings

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed
then
	ynh_script_progression "Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="$install_dir/data"
fi

mkdir -p "$install_dir/data/config"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app: "$install_dir"
# Prepare log path
log_path="/var/log/$app"
mkdir -p "$log_path"
chmod 750 "$log_path"
chmod -R o-rwx "$log_path"
chown -R $app: "$log_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_config_add_nginx

env_path="$install_dir/venv/bin:$PATH"

# Create a dedicated systemd config
ynh_config_add_systemd

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate

yunohost service add $app --description="Subtitle downloader for Radarr and Sonarr" --log="/var/log/$app/$app.log"

#=================================================
# UPGRADING BAZARR
#=================================================
#REMOVEME? ynh_script_progression "Upgrading Bazarr and its dependencies..."

pushd $install_dir
    # Initialize virtual environment
    ynh_exec_as_app python${python_major_version} -m venv venv

    ynh_exec_as_app $install_dir/venv/bin/pip install -r "$install_dir/requirements.txt"
popd

#=================================================
# UPDATE A CONFIG FILE
#=================================================
#FIXME: Find a way not to override all settings while upgrading the config file.
#FIXME: This is done once after v1.4.0 that changed the config file from .ini to .yaml format
if ynh_app_upgrading_from_version_before 1.4.0~ynh1 || [ ! -f "$install_dir/data/config/config.yaml" ]
then
    ynh_script_progression "Updating configuration..."
    ynh_config_add --template="config.yaml" --destination="$install_dir/data/config/config.yaml"
fi

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 660 "$install_dir/data/config/config.yaml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app: "$install_dir/data/config/config.yaml"

#=================================================
# YUNOHOST MULTIMEDIA INTEGRATION
#=================================================
ynh_script_progression "Adding multimedia directories..."

# Build YunoHost multimedia directories
ynh_multimedia_build_main_dir
# Enable writing into these directories
ynh_multimedia_addaccess $app

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
